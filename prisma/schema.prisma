generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model order {
  id               Int      @id @default(autoincrement())
  orderNumber      String
  senderName       String
  senderAddress    String
  consigneeName    String
  consigneeAddress String
  transport        String
  service          String
  colly            String
  weight           String
  description      String
  origin           String
  destination      String
  airwayBill       String   @unique(map: "Order_airwayBill_key")
  keterangan String @default("-")
  status           String   @default("pending")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt // Tambahkan @updatedAt
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
}

model Invoice {
  id              String       @id @default(uuid())
  namaPT          String
  invoiceNumber   String       @unique // Ensures unique invoice numbers
  invoiceDate     DateTime
  totalAmount     Float        @default(0) // Stores the total calculated amount for quick reference
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  items           InvoiceItem[] // Relation to InvoiceItem
}

model InvoiceItem {
  id              String    @id @default(uuid())
  invoiceId       String
  invoice         Invoice   @relation(fields: [invoiceId], references: [id], onDelete: Cascade) // Links to Invoice, cascade deletes items if invoice is removed
  type            String    // "KIRIM" or "RETUR"
  no              Int
  date            DateTime
  pengirim        String
  kotaOrigin      String
  penerima        String
  kotaTujuan      String
  noTiket         String
  partDesc        String
  colly           Int
  kg              Float
  ket             String    // "Good Part" or "Bad Part"
  service         String
  biayaPerKg      Float
  totalBiayaItem  Float     // Calculated: kg * biayaPerKg for this specific item

  @@index([invoiceId]) // Improves query performance when fetching items by invoice
}
